version: "3.9"

services:
  medbook-nginx-dev:
    image: nginx:latest
    container_name: medbook-nginx-dev
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      - medbook-userservice-dev
      - medbook-bookingservice-dev
    networks:
      - medbook-userservice-backend-dev
      - medbook-bookingservice-backend-dev
  medbook-userservice-dev:
    image: ghcr.io/pasobeso/medbook-userservice:latest
    container_name: medbook-userservice-dev
    restart: unless-stopped
    env_file:
      - medbook-userservice-dev.env
      - medbook-authtoken-dev.env
    depends_on:
      - medbook-userservice-db-dev
    networks:
      - medbook-userservice-backend-dev

  medbook-userservice-db-dev:
    image: bitnami/postgresql:latest
    container_name: medbook-userservice-db-dev
    restart: unless-stopped
    env_file: medbook-userservice-dev.env
    volumes:
      - medbook_userservice_data_dev:/bitnami/postgresql
    networks:
      - medbook-userservice-backend-dev

  medbook-bookingservice-dev:
    image: ghcr.io/pasobeso/medbook-bookingservice:latest
    container_name: medbook-bookingservice-dev
    restart: unless-stopped
    env_file:
      - medbook-bookingservice-dev.env
      - medbook-authtoken-dev.env
    depends_on:
      - medbook-bookingservice-db-dev
    networks:
      - medbook-bookingservice-backend-dev

  medbook-bookingservice-db-dev:
    image: bitnami/postgresql:latest
    container_name: medbook-bookingservice-db-dev
    restart: unless-stopped
    env_file: medbook-bookingservice-dev.env
    volumes:
      - medbook_bookingservice_data_dev:/bitnami/postgresql
    networks:
      - medbook-bookingservice-backend-dev

volumes:
  medbook_bookingservice_data_dev:
  medbook_userservice_data_dev:

networks:
  medbook-bookingservice-backend-dev:
    driver: bridge
  medbook-userservice-backend-dev:
    driver: bridge
